@startuml
'https://plantuml.com/class-diagram
package model {
abstract class SimulationObject{

}

class SimulationAgent {

}

interface Agent {
    +setRule(Rule rule)
    +update()
}

interface Runnable {
    +run()
}

interface Observer {
    +hasChanged(Value value)
}

package behaviour {
    abstract Rule {
        +act()
    }
    package composites {
    }
    package leafs {
    }

}

class Board {

}

class SimulationEngine {
    +stepAgents()
    +addObject(SimulationObject object)
    +getObjects()
    +getBoard()
}



SimulationObject <|-right- SimulationAgent

Runnable <|-up- SimulationAgent
Agent <|-up- SimulationAgent
Observer *-up- SimulationAgent
Rule o-up- SimulationAgent


Board o-right- SimulationObject
SimulationObject o-- Board

Rule <-- Agent

Rule <|-- composites
Rule <|-- leafs

SimulationEngine -up-> SimulationObject
SimulationEngine -up-> Board
SimulationEngine --> Agent
}





@enduml